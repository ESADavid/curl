version: '3.8'

services:
  validation-system:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: perfect-validation-system
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "8443:8443"
    volumes:
      - ./config:/etc/validation-system
      - ./logs:/var/log/validation-system
      - ./data:/var/lib/validation-system
    environment:
      - VALIDATION_SYSTEM_CONFIG=/etc/validation-system/validation-system.conf
    depends_on:
      - redis
      - postgres
    networks:
      - validation-network

  redis:
    image: redis:7-alpine
    container_name: validation-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - validation-network

  postgres:
    image: postgres:15-alpine
    container_name: validation-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=validation_system
      - POSTGRES_USER=validation_user
      - POSTGRES_PASSWORD=validation_pass
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - validation-network

  nginx:
    image: nginx:alpine
    container_name: validation-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - validation-system
    networks:
      - validation-network

  prometheus:
    image: prom/prometheus:latest
    container_name: validation-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - validation-network

  grafana:
    image: grafana/grafana:latest
    container_name: validation-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - validation-network

volumes:
  redis-data:
  postgres-data:
  prometheus-data:
  grafana-data:

networks:
  validation-network:
    driver: bridge
